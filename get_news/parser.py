import os
import pandas as pd
from collect_process_news import NewsParser, HelperParser

# Словарь ключевых слов для каждой компании
keywords_dict = {
    "SBER": ["СБЕР", "Сбербанк", "Сбер", "Сберколл", "Сбербизнес", "Сбертек", "Сбермаркет", "Мегамаркет", "Греф", "Сберколлектор", "Сбербизнес", "Сбертек", "Сбермаркет", "СберЛогистика", "СберЛизинг", "СберНедвижимость", "Сбербанк-АСТ", "Сбербанк-Резерв", "Сбербанк-Спасение", "Сбербанк-Страхование", "Сбербанк-Технологии", "Сбербанк-Эквайринг", "Сбербанк-Эксперт", "Сбербанк-Контактный Центр"],
    "GAZP": ["GAZP", "Газстройпром", "Газпрома", "Газпром", "Газпромнефть", "Газпромбанк", "Газпроммедиа", "Газпромтранс", "Газпромдобыча", "Газпромэнерго", "Газпромавиа", "Газпроммежрегионгаз", "Газпроминвестходинг", "Газпромнедра", "Газпромпереработка", "Газпромпоставка", "Газпроммонтаж", "Газпромвнешэкономбанк", "Газпромснаб", "Газпромавтоматизация", "Газпромкомплектация", "Газпромгазораспределение", "Газпромэнергосбыт", "Газпромнефтегаз", "Газпромгазэнергосбыт", "Газпромкапитал", "Газпромстрой", "Газпромнефтьцентр", "Газпромтрансгаз", "Газпромбурение", "Газпромперевозка", "Газпромавтоматика"],
    "LKOH": ["LKOH", "Лукойл", "Лукойл-Нефтепродукт", "Лукойл-Гарант", "Лукойл-Инжиниринг", "Лукойл-Москва", "Лукойл-Пермь", "Лукойл-Уралнефтегаз", "Лукойл-Западная Сибирь", "Лукойл-Волгограднефтепродукт", "Лукойл-Калуга", "Лукойл-Трейд", "Лукойл-Нижегороднефтепродукт", "Лукойл-Югнефтепродукт", "Лукойл-Кубаньнефтепродукт", "Лукойл-Казахстан", "Лукойл-Азербайджан", "Лукойл-Украина", "Лукойл-Гео", "Лукойл-Газпром", "Лукойл-Технологии", "Лукойл-Центрнефтепродукт", "Лукойл-Волгограднефтехим", "Лукойл-Юг", "Лукойл-Информ", "Лукойл-Север", "Лукойл-Калининграднефтепродукт", "Лукойл-Центр", "Лукойл-Санкт-Петербург", "Лукойл-Северозапад", "Лукойл-Московиянефтепродукт", "Лукойл-Сургутнефтепродукт", "Лукойл-Холдинг", "Лукойл-Сибирь", "Лукойл-Энергосбыт"],
    "MTSS": ["MTSS", "МТС", "Мобильные ТелеСистемы", "МТС-Банк", "MTS Money", "МТС-Медиа", "МТС-Телеком", "МТС-Украина", "МТС-Туркменистан", "МТС-Беларусь", "МТС-Армения", "МТС-Киргизия", "МТС-Узбекистан", "МТС-Индия", "МТС-Таджикистан", "МТС-Армения", "МТС-Казахстан", "МТС-Туркменистан", "МТС-Туркменистан", "МТС-Турция", "МТС-Грузия", "МТС-Киргизия", "МТС-Монтенегро", "МТС-Мьянма", "МТС-Сейшелы", "МТС-Шри-Ланка", "МТС-Гана", "МТС-Нигерия", "МТС-Иран", "МТС-Афганистан", "МТС-Пакистан", "МТС-Армения"]
}

def main():
    # Проверим, существует ли файл с новостями
    output_dir = "news_data"
    os.makedirs(output_dir, exist_ok=True)
    
    news_file = "news_data/SBER_news.csv"
    if not os.path.exists(news_file):
        # Если файла нет, создаем экземпляр класса NewsParser и собираем новости
        news_parser = NewsParser("https://bcs-express.ru/category/sber", keywords_dict['SBER'], 'SBER')
        news_parser.parse_news(len_dataset=1000, stop_date='2015-01-01')  # Задайте нужный объем данных
        news_parser.save_to_csv(output_dir, 'SBER_news.csv')
    
    # Загружаем и очищаем файл с новостями
    df = pd.read_csv(news_file)
    df.drop_duplicates(inplace=True)
    df["Ticker"] = "SBER"
    
    # Создаем экземпляр HelperParser для анализа новостей
    parser = HelperParser(keywords_dict, 'SBER')
    parsed_data = parser.parse_dataset(df)
    
    # Сохраняем результаты анализа
    parsed_data.to_csv("news_data/SBER_analyzed.csv", index=False)
    print("Анализ завершен. Результаты сохранены в news_data/SBER_analyzed.csv")
    
    # Закрываем драйвер браузера
    parser.close_driver()

if __name__ == "__main__":
    main()
